server:
  port: 8080

spring:
  application:
    name: ahamo-dummy-demo2-api-gateway-service
  
  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
      routes:
        - id: auth-service
          uri: http://localhost:8080
          predicates:
            - Path=/api/v1/auth/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
        - id: product-service
          uri: http://product-service:8080
          predicates:
            - Path=/api/v1/smartphones/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 60
                redis-rate-limiter.burstCapacity: 100
                redis-rate-limiter.requestedTokens: 1

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8081/api/v1/auth

  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:dGVzdFNlY3JldEtleUZvckpXVFRva2VuVGVzdGluZ1B1cnBvc2VzMTIzNDU2Nzg5MA==}
  access-token-expiration: 3600000
  refresh-token-expiration: 86400000

# Rate Limiting Configuration
rate-limit:
  default-requests-per-minute: 60
  auth-requests-per-minute: 10

# Logging Configuration
logging:
  level:
    com.ahamo.dummy.demo2.gateway: INFO
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway
  endpoint:
    health:
      show-details: when-authorized
    gateway:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
